openapi: '3.0.2'
info:
  title: Todo API
  version: '1.0'
servers:
  - url: http://localhost:3000
paths:
  ##### Auth Paths #####
  /auth/signup:
    post:
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
      tags:
        - Auth
  /auth/signin:
    post:
      security:
        - BasicAuth: []
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthenticatedError'
      tags:
        - Auth

  ##### Todo Paths #####
  /api/todos:
    get:
      summary: Get a list of all existing todos
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/UnauthorizedError'
      tags:
        - Todos
    post:
      summary: Create a todo and add it to the catalog
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Todo'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/UnauthorizedError'
      tags:
        - Todos
  /api/todos/{id}:
    get:
      summary: Get a todo by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The todo ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/UnauthorizedError'
      tags:
        - Todos
    put:
      summary: Update a todo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The todo ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/UnauthorizedError'
      tags:
        - Todos
    patch:
      summary: Update a todo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The todo ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/UnauthorizedError'
      tags:
        - Todos
    delete:
      summary: Delete a todo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The todo ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/UnauthorizedError'
      tags:
        - Todos

components:
  responses:
    UnauthenticatedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
    UnauthorizedError:
      description: User is valid, but is unauthorized to perform this task.
      headers:
        WWW_Authenticate:
          schema:
            type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      properties:
        username:
          type: string
        password:
          type: string
        role:
          type: string
          enum: [unverified, user, moderator, admin]
    Todo:
      properties:
        task:
          type: string
        difficulty:
          type: integer
        complete:
          type: boolean
